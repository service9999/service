import t from"@bitcoin-computer/bitcore-mnemonic-ltc";import{expect as r}from"chai";import e from"crypto";import o from"crypto-js";import*as n from"eciesjs";function c(t){return Buffer.from(o.SHA256(t).toString(),"hex").toString("hex").substr(0,4)}function i(t){return`${c(t)};${t}`}function s(t){const r=t.substr(0,4);const e=t.substr(5);if(!function(t,r){return c(t)===r}(e,r))throw new Error("Decryption failure");return e}function f(){return e.randomBytes(32).toString("hex")}function u(t,r){if(!/^[0-9a-f]{64}$/.test(r))throw new Error("Invalid secret");const e=Buffer.from(r,"hex").toString("binary");const n=i(t);return o.AES.encrypt(n,e).toString()}function a(t,r){if(!/^[0-9a-f]{64}$/.test(r))throw new Error("Invalid secret");const e=Buffer.from(r,"hex").toString("binary");return s(o.AES.decrypt(t,e).toString(o.enc.Utf8))}function y(t,r){if(!/^0[2-3][0-9a-f]{64}|04[0-9a-f]{128}$/.test(r))throw new Error("Invalid publicKey");const e=i(t);return n.encrypt(r,Buffer.from(e,"utf8")).toString("base64")}function l(t,r){if(!/^[0-9a-f]{64}$/.test(r))throw new Error("Invalid privateKey");return s(n.decrypt(r,Buffer.from(t,"base64")).toString("utf8"))}function m(t,r){const e=t.split(".");let o="";if(r.forEach((t=>{e.forEach((r=>{try{o=a(r,t)}catch(t){const r=["Decryption failure","Malformed UTF-8 data"];if(t instanceof Error&&!r.includes(t.message))throw t}}))})),o)return o;throw new Error("Decryption failure")}function p({__cypher:t,__secrets:r},e){let o="";if(e.forEach((e=>{r.forEach((r=>{try{const n=l(r,e);o=a(t,n)}catch(t){const r=["Decryption failure","Unsupported state or unable to authenticate data"];if(t instanceof Error&&!r.includes(t.message))throw t}}))})),o)return o;throw new Error("Decryption failure")}const{PrivateKey:d}=t.bitcore;describe("Crypto",(()=>{describe("Random secret",(()=>{it("Tests random secret",(()=>{const t=f();r(t.length).eq(64)}))})),describe("Symmetric encryption",(()=>{it("Tests symmetric encryption",(()=>{const t=f();const e=u("Hello, World",t);r(e).to.not.be.undefined,r(typeof e).eq("string");const o=a(e,t);r(o).eq("Hello, World")}))})),describe("Asymmetric encryption",(()=>{it("Tests asymmetric encryption",(()=>{const t=new d;const e=t.toPublicKey();const o=t.toBuffer().toString("hex");const n=y("Hello, World",e.toString());r(n).to.not.be.undefined,r(typeof n).eq("string");const c=l(n,o);r(c).eq("Hello, World")}))})),describe("Symmetric encryption multi-secret",(()=>{it("Symmetric encryption multi-secret",(()=>{const t=f();const e=f();const o=[t,e].map((t=>u("Hello, World",t))).join(".");r(o).to.not.be.undefined,r(typeof o).eq("string");const n=m(o,[t]);r(n).eq("Hello, World");const c=m(o,[e]);r(c).eq("Hello, World")}))})),describe("Asymmetric encryption multi-key",(()=>{it("Tests asymmetric encryption multi-key",(()=>{const t=new d;const e=t.toPublicKey();const o=t.toBuffer().toString("hex");const n=e.toString();const c=new d;const i=c.toPublicKey();const s=c.toBuffer().toString("hex");const a=i.toString();const l=JSON.stringify({a:"a"});const m=function(t,r){const e=f();return{__cypher:u(t,e),__secrets:r.map((t=>y(e,t)))}}(l,[n,a]);r(m).to.be.an("object"),r(m.__cypher).to.be.an("string"),r(m.__secrets).to.be.an("array").that.have.lengthOf(2);const h=p(m,[o]);const b=p(m,[s]);r(h).eq(l),r(b).eq(l)}))}))}));
